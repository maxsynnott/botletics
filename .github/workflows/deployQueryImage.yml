name: Push query image

on:
  workflow_dispatch:

  push:
    branches:
      - master
    paths:
      - servers/lambdas/query/**
      - servers/server/prisma/**

env:
  IMAGE_TAG: latest
  AWS_REGION: ap-southeast-1

defaults:
  run:
    shell: bash

jobs:
  buildAndPush:
    name: Push query to ECR
    runs-on: ubuntu-latest
    env:
      ECR_REPOSITORY: botletics-db-query

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

      - name: Login to Docker Hub
        id: login-dh
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Copy prisma dir
        id: copy-prisma-dir
        run: cp -r ./servers/server/prisma ./servers/lambdas/query/prisma

      - name: Build, tag, and push image to Amazon ECR
        working-directory: ./servers/lambdas/query
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  updateLambdaImage:
    needs: buildAndPush
    uses: maxsynnott/botletics/.github/workflows/updateLambdaImage.yml@master
    with:
      repositoryName: botletics-db-query
      functionName: query
    secrets:
      awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
      awsSecretKey: ${{ secrets.AWS_SECRET_KEY }}
